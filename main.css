:root{
    --clr-primary: rgb(54,112,199);
    --clr-light: #f4f4f4;
    --clr-dark: #333;
    --clr-warning: rgb(99,36,36); 
}

*,
*::before,
*::after {
    font-family: inherit;
    box-sizing: border-box;
}

body {
    margin: 0;
    font-family: "Work Sans", sans-serif;
    font-weight:300;
    font-size: 1.5rem;
    background-color: var(--clr-primary);
    color: var(--clr-light);

    display: grid;
    grid: 
        "header header header header" auto
        ".....  lists  active ......" auto /
        1fr minmax(100px, 300px) minmax(250px, 500px) 1fr;
}

.title {
    grid-area: header;
    text-align: center;  
    font-size: calc(4vw + 2rem);
    font-weight: 800;
    color: var(--clr-light);
    opacity: 0.7;
    letter-spacing: 2px;
    margin: 0.5em 0.5em;
}

.all-lists{
    grid-area: lists;
}

.task-list{
    font-size: 1.2rem;
    line-height: 1.7;
    list-style: circle;
    padding-left: 1.1em;
}

.list-name{
    cursor: pointer;
}

.list-name:hover{
    opacity: 0.7;
}

form {
    display:flex; 
}

.btn {
    cursor: pointer; /*Interactable*/
    background: 0;
    border: 0;
    padding: 0;
    color: inherit;
    font-size: 1.5rem;
}   

.btn.create {
    font-weight: 900;
    margin-right: .25rem;
    transition: opacity 250ms ease-in;
}

.btn.create:hover {
    opacity: 0.7;
}

.new-task-creator .btn{
    color: var(--clr-primary);
}

.new {
    background: transparent;
    border: 0;
    color: inherit;
    border-bottom: 1px solid currentColor;
    padding: 0.25em;

    font-size: inherit;
    outline: none;

    transition: border-bottom 250ms ease-in; /*how fast should changes to border-bottom be applied*/
    order: 2;  /* change tab order */ 
    
}


.new.list {
    font-size: 1.2rem;
}

.new:focus {
    border-bottom-width: 3px;
}

.new:focus::placeholder{
    opacity: 0.2; /* modifies placeholder text */
}

.active-list {
    font-weight: 700;

} 

.todo-list{
    --spacer: 2rem;
    grid-area: active;
    background: var(--clr-light);
    color: var(--clr-dark);
}

.todo-header {
    padding: var(--spacer);
    background: #e4e4e4;
    display: flex;
    align-items: center;
    justify-content: space-between;
}


.todo-title {
    margin: 0;
}

.task-count {
    font-size: 1rem;
    margin: 0;
}

.todo-body {
    padding: var(--spacer);
    position: relative;
}

[type="checkbox"] {
    /* hides builtin checkbox */
    opacity: 0; 
    position: absolute;
}

.task label {
    /* so that cross-out line is positioned absolutely to it
    + only spans the text label */
    display: inline-flex; 
    position: relative;

    align-items: center;
    margin-bottom: 1.25em;
}

.task {
    position: relative;
}

.task::after{
    /* underline for each task  */
    content: "";
    position: absolute;
    /* empty element no width by default, thats why left + right = 0 or set width */
    left: 0;
    right: 0;
    height: 2px;
    bottom: 25%;
    background: currentColor;
    opacity: 0.1;
}

.custom-checkbox {
    --size: .75em;
    /* custom checkbox sits in line with label */
    display: inline-block;
    width: var(--size);
    height: var(--size);
    margin-right: var(--size);
    cursor: pointer;
    border: 2px solid currentColor;
    /* circle checkbox */
    border-radius: 50%; 

    transform: scale(1);
    transition: transform 200 ease-in-out;
}

.task:hover .custom-checkbox, 
/* focus by hovering / tabbed */
[type="checkbox"]:focus + label .custom-checkbox {
    /* hover task makes checkbox bigger */
    transform: scale(1.1);
    color: var(--clr-primary);
}

/* custom checkbox is ticked with a circle inside*/
[type="checkbox"]:checked + label .custom-checkbox{
    background: var(--clr-primary);
    border-color: var(--clr-primary);
    /* box-shadow: (inset) offset-x offset-y blur spread color */
    box-shadow: inset 0 0 0px 3px white;
}

[type="checkbox"]:checked + label {
    opacity: 0.5;
}


.task label::after{
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    top: 50%;
    height: 3px;
    background: currentColor;
    /* hides cross-out line until box is checked */
    transform: scaleX(0);
    transition: transform 150ms ease-in-out
}

[type="checkbox"]:checked + label::after{
    opacity: 0.5;
    /* starts crossing out from the left*/
    transform: scaleX(1);
    transform-origin: left;
}

.task-deleter {
    display: flex;
    justify-content: space-evenly;
    position: absolute;
    width: 100%;
    left: 0;
    bottom: -35px;

    color: var(--clr-light)
}

.btn.delete {
    opacity: 0.7;
    font-size: 1rem;
}

.btn.delete:hover{
    color: var(--clr-warning);
}
